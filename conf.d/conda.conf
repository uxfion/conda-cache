# 缓存配置
proxy_cache_path /var/cache/nginx/conda 
    levels=2:2 
    keys_zone=conda:1024m
    max_size=10995116277760  # 10T 
    use_temp_path=off
    inactive=360d;           # 半年未访问的缓存可以被清理

# DNS配置
resolver 8.8.8.8 ipv6=off valid=300s;
resolver_timeout 5s;

# 日志格式配置
log_format cache_status '$remote_addr [$time_local] "$request" $status'
    ' $body_bytes_sent $request_time "$upstream_cache_status"'
    ' "$http_user_agent"';

log_format cache_brief '[$time_local] $remote_addr | $upstream_cache_status | $request_time s | $body_bytes_sent | $request';

# log_format cache_debug '[$time_local] $remote_addr | $upstream_cache_status | $request_time s | '
#     '$body_bytes_sent | $request | '
#     'Cache-Control: $upstream_http_cache_control | '
#     'Age: $upstream_http_age | '
#     'ETag: $upstream_http_etag | '
#     'Last-Modified: $upstream_http_last_modified | '
#     'Expires: $upstream_http_expires | '
#     'If-None-Match: $http_if_none_match | '
#     'If-Modified-Since: $http_if_modified_since';

# log_format cache_revalidate '[$time_local] $remote_addr | $upstream_cache_status | '
#     'URI: $request_uri | '
#     'Cache Key: $request_uri$http_if_none_match | '
#     'Response: $upstream_status | '
#     'Expires: $upstream_http_expires | '
#     'Cache-Control: $upstream_http_cache_control';

server {
    listen 80;
    server_name repo.anaconda.com;
    
    # 日志配置
    access_log /var/log/nginx/conda_access.log cache_status;
    access_log /var/log/nginx/conda_cache.log cache_brief;
    error_log /var/log/nginx/conda_error.log error;

    # access_log /var/log/nginx/conda_cache_debug.log cache_debug;
    # access_log /var/log/nginx/conda_cache_revalidate.log cache_revalidate;

    # Cookie 处理
    proxy_ignore_headers Set-Cookie;
    proxy_hide_header Set-Cookie;
    proxy_ignore_headers Cache-Control Expires;
    proxy_hide_header Cache-Control;

    # 全局代理设置
    proxy_buffering on;
    proxy_buffers 32 64k;          # 增大缓冲区
    proxy_buffer_size 64k;
    proxy_busy_buffers_size 128k;
    proxy_max_temp_file_size 2048m;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # SSL 设置
    proxy_ssl_server_name on;
    proxy_ssl_name repo.anaconda.com;

    # 全局缓存设置
    proxy_cache_background_update on;
    proxy_cache_lock on;
    proxy_cache_lock_timeout 5s;
    proxy_next_upstream error timeout http_500 http_502 http_503 http_504;

    # 响应头设置
    add_header X-Cache-Status $upstream_cache_status always;
    add_header X-Served-By $hostname always;

    # 包文件缓存配置（.conda 和 .tar.bz2 文件）
    location ~ /pkgs/.*\.(conda|tar\.bz2)$ {
        proxy_cache conda;
        proxy_cache_valid 200 7d;        # 新文件缓存7天
        proxy_cache_valid 304 30d;      # 验证未改变后缓存30天
        proxy_cache_background_update on; # 后台更新
        proxy_cache_revalidate on;       # 启用缓存重验证
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504 updating;  # 合并的配置
        proxy_cache_key "$request_uri$http_if_none_match";
        proxy_cache_lock on;
        proxy_cache_lock_timeout 5s;
        proxy_cache_min_uses 1;

        set $backend "https://repo.anaconda.com";
        proxy_pass $backend;

        proxy_set_header Host "repo.anaconda.com";
        proxy_set_header Connection "";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;

        proxy_intercept_errors on;
        error_page 302 = @handle_redirect;

        # # 添加调试用的响应头
        # add_header X-Cache-Debug-Key $request_uri$http_if_none_match;
        # add_header X-Cache-Debug-Age $upstream_http_age;
        # add_header X-Cache-Debug-Expires $upstream_http_expires;

        # 压缩设置
        gzip on;
        gzip_types application/x-bzip2;
        gzip_proxied any;
        
        # 错误处理
        error_page 500 502 503 504 /50x.html;
    }

    # repodata.json 文件缓存配置
    location ~ /pkgs/.*repodata\.json$ {
        proxy_cache conda;
        proxy_cache_valid 200 1h;        # 缓存1小时
        proxy_cache_valid 304 3h;        # 验证后缓存3小时
        proxy_cache_use_stale updating error timeout http_500 http_502 http_503 http_504;
        proxy_cache_revalidate on;
        proxy_cache_background_update on;
        proxy_cache_key "$request_uri$http_if_none_match";
        proxy_cache_lock on;
        proxy_cache_lock_timeout 5s;
        proxy_cache_min_uses 1;

        set $backend "https://repo.anaconda.com";
        proxy_pass $backend;

        proxy_set_header Host "repo.anaconda.com";
        proxy_set_header Connection "";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;

        # # 添加调试用的响应头
        # add_header X-Cache-Debug-Key $request_uri$http_if_none_match;
        # add_header X-Cache-Debug-Age $upstream_http_age;
        # add_header X-Cache-Debug-Expires $upstream_http_expires;

        # 压缩设置
        gzip on;
        gzip_types application/json;
        gzip_proxied any;
    }

    # 重定向处理
    location @handle_redirect {
        proxy_cache conda;
        proxy_cache_valid 200 7d;
        proxy_cache_use_stale timeout;
        proxy_cache_key "$saved_uri$http_if_none_match";
        set $saved_uri '$uri';
        set $saved_redirect_location '$upstream_http_location';
        proxy_pass $saved_redirect_location;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host "repo.anaconda.com";
    }

    # 默认包文件路径处理（用于其他文件）
    location /pkgs/ {
        proxy_cache conda;
        proxy_cache_valid 200 1d;
        proxy_cache_use_stale updating error timeout http_500 http_502 http_503 http_504;
        proxy_cache_key "$request_uri$http_if_none_match";
        proxy_cache_lock on;
        proxy_cache_lock_timeout 5s;

        set $backend "https://repo.anaconda.com";
        proxy_pass $backend;

        proxy_set_header Host "repo.anaconda.com";
        proxy_set_header Connection "";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
    }

    # 健康检查
    location /health {
        access_log off;
        return 200 'healthy\n';
    }

    # 错误页面
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}